name: CI

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ci-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          key: |
            ${{ runner.os }}-cypress-${{ hashFiles('pnpm-lock.yaml') }}
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
            ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-cypress-
            ${{ runner.os }}-nextjs-
            ${{ runner.os }}-pnpm-store-
          path: |
            node_modules
            ${{ runner.os }}/.next/cache
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Install dependencies
        run: |
          pnpm install --no-frozen-lockfile
          pnpm cypress info

      - name: 👕 Lint
        run: pnpm lint

      - name: 🛠️ Build
        run: |
          pnpm dlx vercel link --yes --token=${{ secrets.VERCEL_TOKEN }}
          pnpm dlx vercel env pull .env.local --token=${{ secrets.VERCEL_TOKEN }}
          echo 'BLOB_READ_WRITE_TOKEN="${{ secrets.BLOB_READ_WRITE_TOKEN }}"' >> .env.local
          pnpm build

      - name: 🧪 Unit test
        run: pnpm test:run

      - name: E2E Tests
        uses: cypress-io/github-action@v6
        with:
          start: pnpm start
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
          browser: chrome
          component: true
          command: pnpm e2e:ci
        env:
          DEBUG: 'cypress:server:args'

      - name: Clean ENV file
        run: rm -rf .env.local

      - uses: actions/upload-artifact@v4
        with:
          name: cypress-report
          path: cypress/report
          if-no-files-found: ignore